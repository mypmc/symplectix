name: Testing

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      channel:
        required: true
        type: string

jobs:
  bazel:
    name: Bazel
    runs-on: ${{ inputs.os }}
    env:
      bazel-cmd: bazel --output_user_root=/tmp/trunk/${{ inputs.channel }}
      bazel-args: --config=ci --config=${{ inputs.channel }}
      bazel-build: ${{ env.bazel-cmd }} build ${{ env.bazel-args }}
      bazel-test: ${{ env.bazel-cmd }} test ${{ env.bazel-args }}
      bazel-run: ${{ env.bazel-cmd }} run ${{ env.bazel-args }}
    steps:
      - name: Check channel validity
        run: bash -c '[[ "$CHANNEL" == "stable" || "$CHANNEL" == "nightly" ]]'
        env:
          CHANNEL: ${{ inputs.channel }}

      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        env:
          cache-name: bazel-cache-${{ inputs.channel }}
        with:
          # bazelisk stores a bazel binary in the [UserCacheDir](https://pkg.go.dev/os#UserCacheDir).
          path: |
            /tmp/trunk/${{ inputs.channel }}
            ~/.cache/bazelisk
            ~/Library/Caches/bazelisk
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}-
          restore-keys: ${{ runner.os }}-${{ env.cache-name }}-

      - uses: actions/cache@v3
        if: github.event_name == 'schedule' && ${{ inputs.channel }} == 'stable'
        env:
          cache-name: advisory-db-cache
        with:
          path: ~/.cargo/advisory-db
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ env.cache-name }}-

      - name: Run //tool/buildifier
        run: ${{ env.bazel-run }} //tool/buildifier

      - name: Run //tool/audit
        if: github.event_name == 'schedule' && ${{ inputs.channel }} == 'stable'
        run: ${{ env.bazel-run }} //tool/audit

      - name: Build
        run: ${{ env.bazel-build }} //...

      - name: Test
        run: ${{ env.bazel-test }} //...
