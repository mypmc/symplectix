on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

jobs:
  bazel:
    name: Bazel
    runs-on: ${{ inputs.os }}
    env:
      BAZEL: bazel --output_user_root=/tmp/ci/
      BAZEL_ARGS: --config=ci

      # Environment variables for stamping.
      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      # See also 'tool/workspace_status/stamp.sh'.
      #
      # A unique number for each workflow run within a repository.
      # This number does not change if you re-run the workflow run.
      GITHUB_RUN_ID: ${{ github.run_id }}
      # A unique number for each run of a particular workflow in a repository.
      # This number begins at 1 for the workflow's first run, and increments with each new run.
      # This number does not change if you re-run the workflow run.
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
      # A unique number for each attempt of a particular workflow run in a repository.
      # This number begins at 1 for the workflow run's first attempt, and increments with each re-run.
      GITHUB_RUN_ATTEMPT: ${{ github.run_attempt }}
    steps:
      # TODO: Remove
      - run: echo $GITHUB_RUN_ID
      - run: echo $GITHUB_RUN_NUMBER
      - run: echo $GITHUB_RUN_ATTEMPT

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        env:
          cache-name: bazel-cache
        with:
          # bazelisk stores a bazel binary in the [UserCacheDir](https://pkg.go.dev/os#UserCacheDir).
          path: |
            /tmp/ci
            ~/.cache/bazelisk
            ~/Library/Caches/bazelisk
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-${{ env.cache-name }}-

      - run: $BAZEL run $BAZEL_ARGS //tool/buildifier
        name: Buildifier

      - run: $BAZEL build $BAZEL_ARGS //...
        name: Build

      - run: $BAZEL test $BAZEL_ARGS //...
        name: Test

      - run: $BAZEL run $BAZEL_ARGS //tool/audit
        name: Audit
        if: github.event_name == 'schedule'
